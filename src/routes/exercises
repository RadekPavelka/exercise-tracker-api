const ExerciseModel = require("../models/exercise.model");
const UserModel = require("../models/user.model");
const express = require('express');
const router = express.Router();

router.post('/api/exercise/add', (req, res) => {
    if (!req.body) {
        return res.status(400).send('Request body is missing');
    }

    if (req.body.date === "") {
        req.body.date = undefined;
    }

    let username = "";

    UserModel.findById(req.body.userId)
        .then(doc => {
            username = doc.username;
        })
        .catch(err => {
            console.log(err);
        });


    let model = new ExerciseModel(req.body);

    model.save()
        .then((doc) => {
            if (!doc || doc.length === 0) {
                res.status(500).send(doc);
            }
            res.status(201).json({"username": username, ...doc.toJSON()});
        })
        .catch(err => {
            res.status(500).json(err);
        })
});

router.get('/api/exercise/log', (req, res) => {
    if (!req.query.userId) {
        return res.status(400).send("Missing URL parameter: userId");
    }

    if (req.query.userId) {
        if (req.query.limit) {
            ExerciseModel.find({userId: req.query.userId}).sort({"date": -1}).limit(parseInt(req.query.limit, 10))
                .then(doc => {
                    let exercisesCount = doc.length;
                    res.status(200).json({"exercises": doc, "count": exercisesCount});
                })
                .catch((err) => {
                    res.status(500).json(err);
                })
        }
        else if (req.query.from) {
            ExerciseModel.find({userId: req.query.userId, date: {$gte: req.query.from}}).sort({"date": -1})
                .then(doc => {
                    let exercisesCount = doc.length;
                    res.status(200).json({"exercises": doc, "count": exercisesCount});
                })
                .catch((err) => {
                    res.status(500).json(err);
                })
        }

        else {
            ExerciseModel.find({userId: req.query.userId})
                .then((doc) => {
                    let exercisesCount = doc.length;
                    res.status(200).json({"exercises": doc, "count": exercisesCount});
                })
                .catch((err) => {
                    res.status(500).json(err);
                })
        }


    }


});

module.exports = router;
